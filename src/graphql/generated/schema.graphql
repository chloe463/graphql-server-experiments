### This file was generated by Nexus Schema
### Do not make changes to this file directly


type CancelToDeleteQuestionnairePayload {
  questionnaire: Questionnaire
}

type Comment {
  body: String!
  email: String!
  id: Int!
  name: String!
  postId: Int!
}

input CreateOptionInput {
  text: String!
}

input CreateQuestionInput {
  options: [CreateOptionInput]
  required: Boolean!
  text: String!
  type: Int!
}

input CreateQuestionnaireInput {
  description: String!
  endAt: DateTime!
  questions: [CreateQuestionInput]
  startAt: DateTime!
  state: Int
  title: String!
}

type CreateQuestionnairePayload {
  questionnaire: Questionnaire
}

input CreateTodoInput {
  task: String!
}

type CreateTodoPayload {
  todo: Todo
}

scalar Date

scalar DateTime

input DeleteQuestionnaireInput {
  id: Int!
}

type DeleteQuestionnairePayload {
  id: Int
  result: Boolean
}

type Mutation {
  cancelToDeleteQuestionnaire(id: Int!): CancelToDeleteQuestionnairePayload
  createQuestionnaire(questionnaire: CreateQuestionnaireInput): CreateQuestionnairePayload
  createTodo(todo: CreateTodoInput): CreateTodoPayload
  deleteQuestionnaire(id: Int!): DeleteQuestionnairePayload
  updateQuestionnaire(questionnaire: UpdateQuestionnaireInput!): UpdateQuestionnairePayload
  updateTodo(todo: UpdateTodoInput): UpdateTodoPayload
}

type Option {
  id: Int!
  text: String!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Post {
  body: String!
  id: Int!
  title: String!
  userId: Int!
}

type PostEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Post!
}

type Query {
  comments(postId: Int!): [Comment]!
  postConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int

    """Dummy arg"""
    query: String
  ): QueryPostConnection_Connection!
  posts(limit: Int = 10, start: String = "0"): [Post]
  questionnaire(id: Int): Questionnaire
  questionnaireConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryQuestionnaireConnection_Connection!
  questionnaires: [Questionnaire]
  todoConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryTodoConnection_Connection!
}

type QueryPostConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [PostEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryQuestionnaireConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [QuestionnaireEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type QueryTodoConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [TodoEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type Question {
  id: Int!
  options: [Option]!
  text: String!
  type: Int!
}

type Questionnaire {
  description: String!
  endAt: DateTime!
  id: Int!
  questions: [Question]!
  startAt: DateTime!
  state: Int!
  title: String!
}

type QuestionnaireEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Questionnaire!
}

type Todo {
  createdAt: DateTime!
  finishedAt: DateTime
  id: Int!
  task: String!
  updatedAt: DateTime!
}

type TodoEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Todo!
}

input UpdateOptionInput {
  id: Int
  text: String
}

input UpdateQuestionInput {
  id: Int
  options: [UpdateOptionInput]
  required: Boolean
  text: String
  type: Int
}

input UpdateQuestionnaireInput {
  description: String
  endAt: DateTime
  id: Int!
  questions: [UpdateQuestionInput]
  startAt: DateTime
  state: Int
  title: String
}

type UpdateQuestionnairePayload {
  questionnaire: Questionnaire
}

input UpdateTodoInput {
  finishedAt: DateTime
  id: Int!
  task: String!
}

type UpdateTodoPayload {
  todo: Todo
}
